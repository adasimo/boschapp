my.name=Simon \u00c1d\u00e1m
back.to.main=A feladatokhoz

base.narration=\u00dcdv\u00f6zl\u00f6m!
base.welcome=A nevem Simon \u00c1d\u00e1m. K\u00f6sz\u00f6n\u00f6m, hogy \u00e1ttekinti projektemet! B\u00e1r nem volt feladat, \u00e9n szerettem volna a h\u00e1rom tesztet egy helyen, kompakt m\u00f3don prezent\u00e1lni. A lenti h\u00e1rom gombbal a feladatokat tekintheti \u00e1t. Minden alfeladatot igyekeztem a legjobb tud\u00e1som szerint megoldani, illetve bemutatni, hogy milyen programtechnikai megold\u00e1sokat igyekszem haszn\u00e1lni a munk\u00e1m sor\u00e1n. Term\u00e9szetesen t\u00f6bb minden kimaradt (JUnit tesztek, logol\u00e1s kialak\u00edt\u00e1sa stb. Viszont igyekeztem, egy \u00e1tfog\u00f3 k\u00e9pet adni munkav\u00e9gz\u00e9semr\u0151l. Rem\u00e9lem elnyeri tetsz\u00e9s\u00fcket! (A haszn\u00e1lt tech-stack a k\u00f6vetkez\u0151: Java Spring, Embedded TomCat, Thymeleaf, JQuery, HTML, CSS, Bootstrap, H2(MYSQL MODE) In-memory DB. Az adatb\u00e1zist a kompakts\u00e1g miatt v\u00e1lasztottam (b\u00e1r in-memory db-t a val\u00f3 \u00e9letben csak unit tesztekhez haszn\u00e1ln\u00e9k). El\u0151re is k\u00f6sz\u00f6n\u00f6m, hogy id\u0151t szak\u00edt munk\u00e1m \u00e1ttekint\u00e9s\u00e9re!
base.feladat-1=Els\u0151 feladat
base.feladat-2=M\u00e1sodik feladat
base.feladat-3=Harmadik feladat

feladat1.navbar.list=List\u00e1z\u00e1s
feladat1.navbar.add=Hozz\u00e1ad\u00e1s
feladat1.add.add-header=\u00daj szerv\u00edz felv\u00e9tele
feladat1.add.add-owner=Tulajdonos
feladat1.add.add-car=Aut\u00f3 t\u00edpusa
feladat1.add.add-car-select=K\u00e9rj\u00fck v\u00e1lasszon
feladat1.add.add-guaranteed=Garanci\u00e1lis
feladat1.add.add-age=Aut\u00f3 kora
feladat1.add.add-serviceStart=Szerv\u00edz kezdete
feladat1.add.add-submit=Szerv\u00edz felv\u00e9tele
feladat1.add.save-success=Ment\u00e9s sikeres!

feladat1.error.owner-empty=A tulajdonos mez\u0151 nem lehet \u00fcres! 
feladat1.error.owner-max=A tulajdonos mez\u0151 nem lehet t\u00f6bb 50 karaktern\u00e9l!
feladat1.error.car-empty=Az aut\u00f3 t\u00edpusa mez\u0151 nem lehet \u00fcres!
feladat1.error.guaranteed-empty=A garanci\u00e1lis mez\u0151 nem lehet \u00fcres!
feladat1.error.age-empty=Az aut\u00f3 kora mez\u0151 nem lehet \u00fcres!
feladat1.error.serviceStart-empty=A szerv\u00edz kezdete mez\u0151 nem lehet \u00fcres!

feladat1.list.owner=Tulajdonos neve
feladat1.list.car=Aut\u00f3 megnevez\u00e9se
feladat1.list.guaranteed=Garancia \u00e1llapota
feladat1.list.age=Aut\u00f3 \u00e9letkora
feladat1.list.service-start=Szerv\u00edz kezdete
feladat1.list.service-del=T\u00f6rl\u00e9s

value.guaranteed=Garanci\u00e1lis
value.not-guaranteed=Nem garanci\u00e1lis

link.prev=El\u0151z\u0151
link.dots=...
link.next=K\u00f6vetkez\u0151

btn.delete=T\u00f6rl\u00e9s

feladat2.narration=A gomb megnyom\u00e1s\u00e1val a 2. feladat TXT gener\u00e1l\u00e1sa elindul. A TXT helye a projekt f\u0151k\u00f6nyvt\u00e1ra. A neve FELADAT2MEGOLDAS.txt
feladat2.generate-btn=Gener\u00e1l\u00e1s
feladat2.gen-success=Gener\u00e1l\u00e1s sikeres!
feladat2.gen-not-success=Gener\u00e1l\u00e1s sikertelen!

feladat3.narration=A 3. feladatban alfeladataihoz sz\u00fcks\u00e9ges SQL query megold\u00e1sokat itt list\u00e1zom
feladat3.sql-1=1. ->  SELECT u.name FROM user AS u WHERE u.name LIKE ('Kis%') AND u.id NOT IN (SELECT uc.user FROM user_car AS uc);
feladat3.sql-2=2. ->  SELECT u.name FROM user AS u WHERE (SELECT COUNT(uc.user) FROM user_car uc WHERE uc.user = u.id) >= 2;
feladat3.sql-2.1=2.1->  SELECT u.id, u.name, GROUP_CONCAT(DISTINCT CONCAT(c.brand, ' ', c.model) SEPARATOR ', ') FROM user AS u, car AS c WHERE c.id IN (SELECT uc.car FROM user_car AS uc WHERE uc.user = u.id) AND (SELECT COUNT(uc.user) FROM user_car uc WHERE uc.user = u.id) >= 2 GROUP BY u.name, u.id;
feladat3.sql-3=3. ->  ALTER TABLE user ADD COLUMN nem VARCHAR(10), ADD COLUMN szemelyi_ig_szam VARCHAR(8);
feladat3.sql-4=4. ->  INSERT INTO car (brand, model) VALUES ('Volkswagen', 'Arteon');
feladat3.sql-5=5. ->  UPDATE car SET model = 'Fiesta' WHERE model = 'Focus';
feladat3.sql-6=6. ->  INSERT INTO user_car (user, car) SELECT u.id, c.id FROM user AS u, car AS c WHERE u.id < 10 and (u.name like ('%o%') OR u.name like ('%r%')) AND c.brand = 'Volkswagen' and c.model = 'Arteon';
feladat3.sql-7=7. ->  CREATE INDEX iduserxcar ON user_car (user, car);